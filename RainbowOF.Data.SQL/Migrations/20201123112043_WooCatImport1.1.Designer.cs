// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RainbowOF.Data.SQL;

namespace RainbowOF.Data.SQL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201123112043_WooCatImport1.1")]
    partial class WooCatImport11
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RainbowOF.Models.Items.ActiveItemAttribute", b =>
                {
                    b.Property<int>("ActiveItemAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsUsedForVariableType")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("ActiveItemAttributeId");

                    b.HasIndex("ActiveItemAttributeId", "ItemId")
                        .IsUnique();

                    b.ToTable("ActiveItemAttributes");
                });

            modelBuilder.Entity("RainbowOF.Models.Items.ActiveItemAttributeVariety", b =>
                {
                    b.Property<int>("ActiveItemAttributeVarietyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int>("ItemAttributeId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemUoMId")
                        .HasColumnType("int");

                    b.Property<double>("UoMQtyPerItem")
                        .HasColumnType("float");

                    b.HasKey("ActiveItemAttributeVarietyId");

                    b.HasIndex("ItemUoMId");

                    b.HasIndex("ItemId", "ActiveItemAttributeVarietyId")
                        .IsUnique();

                    b.ToTable("ActiveItemAttributeVarieties");
                });

            modelBuilder.Entity("RainbowOF.Models.Items.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("ItemAbbreviatedName")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ItemDetail")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParentItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ReplacementItemId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("ItemCategoryId");

                    b.HasIndex("ItemName")
                        .IsUnique();

                    b.HasIndex("ParentItemId");

                    b.HasIndex("ReplacementItemId");

                    b.HasIndex("SKU")
                        .IsUnique()
                        .HasFilter("[SKU] IS NOT NULL");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("RainbowOF.Models.Items.ItemAttribute", b =>
                {
                    b.Property<int>("ItemAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderBy")
                        .HasColumnType("int");

                    b.HasKey("ItemAttributeId");

                    b.HasIndex("AttributeName")
                        .IsUnique();

                    b.ToTable("ItemAttributes");
                });

            modelBuilder.Entity("RainbowOF.Models.Items.ItemAttributeVariety", b =>
                {
                    b.Property<int>("ItemAttributeVarietyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BGColour")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<int>("FGColour")
                        .HasColumnType("int")
                        .HasMaxLength(11);

                    b.Property<int>("ItemAttributeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("VarietyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ItemAttributeVarietyId");

                    b.HasIndex("VarietyName", "ItemAttributeId")
                        .IsUnique();

                    b.ToTable("ItemAttributeVarieties");
                });

            modelBuilder.Entity("RainbowOF.Models.Items.ItemCategory", b =>
                {
                    b.Property<int>("ItemCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ItemCategoryId");

                    b.HasIndex("ItemCategoryName")
                        .IsUnique();

                    b.ToTable("ItemCategories");
                });

            modelBuilder.Entity("RainbowOF.Models.Items.ItemUoM", b =>
                {
                    b.Property<int>("ItemUoMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BaseConversationFactor")
                        .HasColumnType("float");

                    b.Property<int?>("BaseUoMId")
                        .HasColumnType("int");

                    b.Property<int>("RoundTo")
                        .HasColumnType("int");

                    b.Property<string>("UoMName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UoMSymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("ItemUoMId");

                    b.HasIndex("BaseUoMId")
                        .IsUnique()
                        .HasFilter("[BaseUoMId] IS NOT NULL");

                    b.HasIndex("UoMName")
                        .IsUnique();

                    b.ToTable("ItemUoMs");
                });

            modelBuilder.Entity("RainbowOF.Models.Logs.WooSyncLog", b =>
                {
                    b.Property<int>("WooSyncLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Result")
                        .HasColumnType("int");

                    b.Property<int>("Section")
                        .HasColumnType("int");

                    b.Property<int>("SectionID")
                        .HasColumnType("int");

                    b.Property<DateTime>("WooSyncDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("WooSyncLogId");

                    b.ToTable("WooSyncLogs");
                });

            modelBuilder.Entity("RainbowOF.Models.System.ClosureDate", b =>
                {
                    b.Property<int>("ClosureDateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReopen")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("NextPrepDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ClosureDateId");

                    b.HasIndex("EventName")
                        .IsUnique()
                        .HasFilter("[EventName] IS NOT NULL");

                    b.ToTable("ClosureDates");
                });

            modelBuilder.Entity("RainbowOF.Models.System.SysPrefs", b =>
                {
                    b.Property<int>("SysPrefsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateLastPrepDateCalcd")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DefaultDeliveryPersonId")
                        .HasColumnType("int");

                    b.Property<bool>("DoReccuringOrders")
                        .HasColumnType("bit");

                    b.Property<int?>("GroupItemTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ImageFolderPath")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("LastReccurringDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReminderDaysNumber")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("SysPrefsId");

                    b.ToTable("SysPrefs");
                });

            modelBuilder.Entity("RainbowOF.Models.System.WooSettings", b =>
                {
                    b.Property<int>("WooSettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AreAttributesImported")
                        .HasColumnType("bit");

                    b.Property<bool>("AreCategoriesImported")
                        .HasColumnType("bit");

                    b.Property<bool>("AreItemQuantatiesImported")
                        .HasColumnType("bit");

                    b.Property<bool>("AreVarietiesMapped")
                        .HasColumnType("bit");

                    b.Property<string>("ConsumerKey")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ConsumerSecret")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("IsSecureURL")
                        .HasColumnType("bit");

                    b.Property<string>("JSONAPIPostFix")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("OnlyInStockItemsImported")
                        .HasColumnType("bit");

                    b.Property<string>("QueryURL")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("RootAPIPostFix")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("WooSettingsId");

                    b.ToTable("WooSettings");
                });

            modelBuilder.Entity("RainbowOF.Models.Woo.WooCategoryMap", b =>
                {
                    b.Property<int>("WooCategoryMapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("WooCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("WooCategoryName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("WooCategoryParentId")
                        .HasColumnType("int");

                    b.Property<string>("WooCategorySlug")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("WooCategoryMapId");

                    b.HasIndex("ItemCategoryId");

                    b.ToTable("WooCategoryMaps");
                });

            modelBuilder.Entity("RainbowOF.Models.Woo.WooProductAttributeMapping", b =>
                {
                    b.Property<int>("WooProductAttributeMappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("WooProductAttributeId")
                        .HasColumnType("int");

                    b.HasKey("WooProductAttributeMappingId");

                    b.ToTable("WooProductAttributeMappings");
                });

            modelBuilder.Entity("RainbowOF.Models.Woo.WooProductAttributeTermMapping", b =>
                {
                    b.Property<int>("ItemAttributeVarietyId")
                        .HasColumnType("int");

                    b.Property<int>("WooProductAttributeTermId")
                        .HasColumnType("int");

                    b.HasKey("ItemAttributeVarietyId", "WooProductAttributeTermId");

                    b.ToTable("WooProductAttributeTermMappings");
                });

            modelBuilder.Entity("RainbowOF.Models.Items.ActiveItemAttributeVariety", b =>
                {
                    b.HasOne("RainbowOF.Models.Items.ItemUoM", "ItemUoM")
                        .WithMany()
                        .HasForeignKey("ItemUoMId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("RainbowOF.Models.Items.Item", b =>
                {
                    b.HasOne("RainbowOF.Models.Items.ItemCategory", "ItemCategory")
                        .WithMany()
                        .HasForeignKey("ItemCategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("RainbowOF.Models.Items.Item", "ParentItem")
                        .WithMany()
                        .HasForeignKey("ParentItemId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("RainbowOF.Models.Items.Item", "ReplacementItem")
                        .WithMany()
                        .HasForeignKey("ReplacementItemId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("RainbowOF.Models.Items.ItemUoM", b =>
                {
                    b.HasOne("RainbowOF.Models.Items.ItemUoM", "BaseUoM")
                        .WithOne()
                        .HasForeignKey("RainbowOF.Models.Items.ItemUoM", "BaseUoMId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("RainbowOF.Models.Woo.WooCategoryMap", b =>
                {
                    b.HasOne("RainbowOF.Models.Items.ItemCategory", "ItemCategory")
                        .WithMany()
                        .HasForeignKey("ItemCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
