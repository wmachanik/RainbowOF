@using RainbowOF.Models.Lookups

@if ((modelItemCategoryLookups == null) || (modelItemCategoryLookups.Count == 0))
{
    <Badge Color="Color.Primary" Pill="true">Category has no children</Badge>
}
else
{
    //--- !!!!! items have changed
    <DataGrid TItem="ItemCategoryLookup" Data="@modelItemCategoryLookups"
          Sortable="true" Editable="false"
          Striped="true"
          Hoverable="true"
          Responsive="true"
          EditMode="DataGridEditMode.Popup"
          TotalItems="modelItemCategoryLookups.Count"
          PageSize="25"
          @bind-SelectedRow="@seletectedItemCategoryLookup"
          DetailRowTrigger="@((catItem)=>((catItem.Item.ItemCategoryLookupId == seletectedItemCategoryLookup?.ItemCategoryLookupId)))"
          Bordered="true"
          UseInternalEditing="true"
          UseValidation="true"
          ShowValidationsSummary="true"
          ValidationsSummaryLabel="Error validating data. Following error occurs..."
          ShowValidationFeedback="true"
          Padding="Padding.Is0">
        <EmptyTemplate>
            @if (modelItemCategoryLookups == null)
            {
                <span>None...</span>
            }
        </EmptyTemplate>
        <LoadingTemplate>
            <Row Style="display: inline-flex;" Padding="Padding.IsAuto">
                <Column>
                    <span class="alert-info">Loading...</span>
                </Column>
            </Row>
        </LoadingTemplate>
        <DataGridColumns>
            <DataGridColumn TItem="ItemCategoryLookup" Field="@nameof(ItemCategoryLookup.CategoryName)" TextAlignment="TextAlignment.Start" Context="childData">
            </DataGridColumn>
            <DataGridColumn TItem="ItemCategoryLookup" Field="@nameof(ItemCategoryLookup.UsedForPrediction)" TextAlignment="TextAlignment.Start" Context="childData">
            </DataGridColumn>
            <DataGridColumn TItem="ItemCategoryLookup" Field="@nameof(ItemCategoryLookup.Notes)" TextAlignment="TextAlignment.Start" Context="childData">
            </DataGridColumn>
        </DataGridColumns>
        <DetailRowTemplate>
            @{
                var ParentCat = (context as ItemCategoryLookup);
                var ParentCatId = ParentCat.ParentCategoryId;


                <ItemCategoriesLookupComponent SourceParentCategoryId="@ParentCatId" CanUseAsync="false" />

            }
        </DetailRowTemplate>
    </DataGrid>
}
