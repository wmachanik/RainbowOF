@page "/itemedit/{id}"

@using RainbowOF.Models.Items
@using RainbowOF.Models.Lookups
@using RainbowOF.Components.Modals

<h2>@ItemEditting?.ItemName Edit</h2>

<div>
    Need to do:
    <ul>
        <li>

            item variants issues:
            <ul>
                <li>funny import issue with disabled items, check Acaia scale (perhaps check empty description or SKU)</li>
                <li>Delete of variant not completed, perhaps do that first.</li>
            </ul>
        </li>
        <li>Check all UoM logic - not sure what this is?</li>
        <li>Get lists to update -> once an item is changed use the lookup list to update item and sub-items or do a reload of the data </li>
    </ul>
</div>

<hr />

@if (ItemEditting == null)
{
    <Badge Class="alert-info" Pill="true">@LoadingMessage</Badge>
}
else
{

    <Validations Mode="ValidationMode.Manual" Model="@ItemEditting">
        <Blazorise.Accordion>
            <Blazorise.Collapse Visible="@collapseItemDetailsVisible" Margin="Margin.Is0">
                <Blazorise.CollapseHeader>
                    <Blazorise.Heading Size="Blazorise.HeadingSize.Is1" Margin="Blazorise.Margin.Is1">
                        <Blazorise.Button Clicked="@(()=>collapseItemDetailsVisible = !collapseItemDetailsVisible)">
                            Item Details &nbsp;&nbsp;
                            <Icon IconStyle="IconStyle.Solid" Name="@(collapseItemDetailsVisible ? IconName.AngleDown : IconName.AngleUp )" Padding="Padding.Is2.FromLeft" Float="Float.End" />
                        </Blazorise.Button>
                    </Blazorise.Heading>
                </Blazorise.CollapseHeader>
                <Blazorise.CollapseBody>
                    <Tabs Mode="TabsMode.LazyLoad" SelectedTab="@SelectedItemTag" SelectedTabChanged="@((v) => SelectedItemTag = v )" >
                        <Items>
                            <Tab Name="MainDetail">Detail</Tab>
                            <Tab Name="MoreDetail">More</Tab>
                        </Items>
                        <Content>
                            <TabPanel Name="MainDetail">
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">SKU</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <TextEdit Placeholder="Item Stock Id number" @bind-Text="@ItemEditting.SKU">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Item</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <TextEdit Placeholder="Item name" @bind-Text="@ItemEditting.ItemName">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Item Enabled</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <Check @bind-Checked="@ItemEditting.IsEnabled">
                                                <ChildContent>
                                                    Enabled?
                                                </ChildContent>
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </Check>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Item Details</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <RichTextEdit @ref="richTextEditRef" Style="border: 1px solid" Theme="RichTextEditTheme.Snow" PlaceHolder="Item Detail" ContentChanged="OnContentChanged">
                                                <Editor>
                                                    @((MarkupString)ItemEditting.ItemDetail)
                                                </Editor>
                                                <Toolbar>
                                                    <RichTextEditToolbarGroup>
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Bold" />
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Italic" />
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Underline" />
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Strike" />
                                                    </RichTextEditToolbarGroup>
                                                    <RichTextEditToolbarGroup>
                                                        <RichTextEditToolbarSelect Action="RichTextEditAction.Size">
                                                            <RichTextEditToolbarSelectItem Value="small" />
                                                            <RichTextEditToolbarSelectItem Selected="true" />
                                                            <RichTextEditToolbarSelectItem Value="large" />
                                                            <RichTextEditToolbarSelectItem Value="huge">Very Big</RichTextEditToolbarSelectItem>
                                                        </RichTextEditToolbarSelect>
                                                    </RichTextEditToolbarGroup>
                                                    <RichTextEditToolbarGroup>
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="ordered" />
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="bullet" />
                                                    </RichTextEditToolbarGroup>
                                                    <RichTextEditToolbarGroup>
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Blockquote" />
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.CodeBlock" />
                                                    </RichTextEditToolbarGroup>
                                                    <RichTextEditToolbarGroup>
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Script" Value="sub" />
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Script" Value="super" />
                                                    </RichTextEditToolbarGroup>
                                                    <RichTextEditToolbarGroup>
                                                        <RichTextEditToolbarSelect Action="RichTextEditAction.Color" />
                                                        <RichTextEditToolbarSelect Action="RichTextEditAction.Background" />
                                                    </RichTextEditToolbarGroup>
                                                    <RichTextEditToolbarGroup>
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Link" />
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Clean" />
                                                    </RichTextEditToolbarGroup>
                                                    @*<RichTextEditToolbarGroup Float="Float.End">
                                                        <Button Class="btn-icon" Size="Size.ExtraSmall" onClick="window.open('https://www.quilljs.com/','quilljs')"><Icon Name="IconName.InfoCircle" /></Button>
                                                        <Button Class="btn-icon" Size="Size.ExtraSmall" Clicked="@OnSave"><Icon Name="IconName.Save" /></Button>
                                                        </RichTextEditToolbarGroup>*@
                                                </Toolbar>
                                            </RichTextEdit>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Item Abr</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <TextEdit Placeholder="Item Abbreviation use for order fulfilment" @bind-Text="@ItemEditting.ItemAbbreviatedName">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Item Type</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <Select TValue="ItemTypes" SelectedValue="@ItemEditting.ItemType"
                                                SelectedValueChanged="@((v) => ItemEditting.ItemType = v)">
                                                @foreach (var itemtypeoption in Enum.GetValues(typeof(ItemTypes)))
                                                {
                                                    <SelectItem TValue="ItemTypes" Value="@((ItemTypes)itemtypeoption)">@itemtypeoption</SelectItem>
                                                }
                                            </Select>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Base Price</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <NumericEdit TValue="decimal" Placeholder="Item's Base Price (standard price)" @bind-Text="@ItemEditting.BasePrice">
                                                @*Pattern="{0:F}">*@
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </NumericEdit>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Manage Stock</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <Check @bind-Checked="@ItemEditting.ManageStock">
                                                <ChildContent>
                                                    Manage Stock?
                                                </ChildContent>
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </Check>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Qty in Stock</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <NumericEdit TValue="int" Placeholder="Qty of item in stock" @bind-Text="@ItemEditting.QtyInStock">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </NumericEdit>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Image</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <TextEdit TValue="string" Placeholder="Image" Text="@ItemEditting.ItemImages.Count.ToString()">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                            </TabPanel>
                            <TabPanel Name="MoreDetail">
                                <Blazorise.Accordion>
                                    <Blazorise.Collapse Visible="@collapseItemMoreDetailsVisible">
                                        <Blazorise.CollapseHeader>
                                            <Blazorise.Heading Size="Blazorise.HeadingSize.Is1" Margin="Blazorise.Margin.Is1">
                                                <Blazorise.Button Clicked="@(()=>collapseItemMoreDetailsVisible = !collapseItemMoreDetailsVisible)">
                                                    More Details &nbsp;&nbsp;
                                                    <Icon IconStyle="IconStyle.Solid" Name="@(collapseItemMoreDetailsVisible ? IconName.AngleDown : IconName.AngleUp )" Padding="Padding.Is2.FromLeft" Float="Float.End" />
                                                </Blazorise.Button>
                                            </Blazorise.Heading>
                                        </Blazorise.CollapseHeader>
                                        <Blazorise.CollapseBody>
                                            <Validation>
                                                <Field Horizontal="true">
                                                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Primary Category</FieldLabel>
                                                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                                        <Select TValue="Guid" SelectedValue="@(ItemEditting.PrimaryItemCategoryLookupId == null ? Guid.Empty : (Guid)ItemEditting.PrimaryItemCategoryLookupId)"
                                                            SelectedValueChanged="@((v) => ItemEditting.PrimaryItemCategoryLookupId = v)">
                                                            <SelectItem TValue="Guid" Value="Guid.Empty">n/a</SelectItem>
                                                        </Select>
                                                    </FieldBody>
                                                </Field>
                                            </Validation>
                                            <Validation>
                                                <Field Horizontal="true">
                                                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Replacement Item</FieldLabel>
                                                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                                        <Select TValue="Guid" SelectedValue="@(ItemEditting.ReplacementItemId == null ? Guid.Empty : (Guid)ItemEditting.ReplacementItemId)"
                                                            SelectedValueChanged="@((v) => ItemEditting.ReplacementItemId = v)">
                                                            <SelectItem TValue="Guid" Value="Guid.Empty">n/a</SelectItem>
                                                        </Select>
                                                    </FieldBody>
                                                </Field>
                                            </Validation>
                                            <Validation>
                                                <Field Horizontal="true">
                                                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Sort Order</FieldLabel>
                                                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                                        <NumericEdit TValue="int" Placeholder="Item sort order" @bind-Text="@ItemEditting.SortOrder">
                                                            <Feedback>
                                                                <ValidationError />
                                                            </Feedback>
                                                        </NumericEdit>
                                                    </FieldBody>
                                                </Field>
                                            </Validation>
                                            <Validation>
                                                <Field Horizontal="true">
                                                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Sync with Woo</FieldLabel>
                                                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                                        <Check @bind-Checked="@ItemEditting.CanUpdateECommerceMap">
                                                            <ChildContent>
                                                                Sync with Woo?
                                                            </ChildContent>
                                                            <Feedback>
                                                                <ValidationError />
                                                            </Feedback>
                                                        </Check>
                                                    </FieldBody>
                                                </Field>
                                            </Validation>
                                            <Validation>
                                                <Field Horizontal="true">
                                                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Notes</FieldLabel>
                                                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                                        <MemoEdit Placeholder="Item notes" @bind-Text="@ItemEditting.Notes" Rows="3">
                                                            <Feedback>
                                                                <ValidationError />
                                                            </Feedback>
                                                        </MemoEdit>
                                                    </FieldBody>
                                                </Field>
                                            </Validation>
                                        </Blazorise.CollapseBody>
                                    </Blazorise.Collapse>
                                    <Blazorise.Collapse Visible="@collapseCategoriesVisible">
                                        <Blazorise.CollapseHeader>
                                            <Blazorise.Heading Size="Blazorise.HeadingSize.Is1" Margin="Blazorise.Margin.Is1">
                                                <Blazorise.Button Clicked="@(()=>collapseCategoriesVisible = !collapseCategoriesVisible)">
                                                    Item Categories &nbsp;&nbsp;
                                                    <Icon IconStyle="IconStyle.Solid" Name="@(collapseCategoriesVisible ? IconName.AngleDown : IconName.AngleUp )" Padding="Padding.Is2.FromLeft" Float="Float.End" />
                                                </Blazorise.Button>
                                            </Blazorise.Heading>
                                        </Blazorise.CollapseHeader>
                                        <Blazorise.CollapseBody>
                                            <Field Horizontal="true" JustifyContent="JustifyContent.Start">
                                                <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                                    @*----- Item Category Grid is a separate component*@
                                                    <RainbowOF.Web.FrontEnd.Pages.ChildComponents.Items.ItemCategoriesComponent PopUpRef="@PopUpRef"
                                                                                                                            ParentItemId="@ItemEditting.ItemId"
                                                                                                                            SourceItemCategories="@ItemEditting.ItemCategories" />
                                                </FieldBody>
                                            </Field>
                                        </Blazorise.CollapseBody>
                                    </Blazorise.Collapse>
                                </Blazorise.Accordion>
                            </TabPanel>
                        </Content>
                    </Tabs>
                </Blazorise.CollapseBody>
            </Blazorise.Collapse>
        </Blazorise.Accordion>
        <Row>
            <Column ColumnSize="ColumnSize.IsFull">
                <Blazorise.Accordion>
                    <Blazorise.Collapse Visible="@collapseAttributesVisible" Margin="Margin.Is0">
                        <Blazorise.CollapseHeader>
                            <Blazorise.Heading Size="Blazorise.HeadingSize.Is1" Margin="Blazorise.Margin.Is1">
                                <Blazorise.Button Clicked="@(()=>collapseAttributesVisible = !collapseAttributesVisible)">
                                    Item Attributes &nbsp;&nbsp;
                                    <span style="margin-right: auto">
                                        <Icon IconStyle="IconStyle.Solid" Name="@(collapseAttributesVisible ? IconName.AngleDown : IconName.AngleUp)" Padding="Padding.Is2.FromLeft" Float="Float.End" />
                                    </span>
                                </Blazorise.Button>
                            </Blazorise.Heading>
                        </Blazorise.CollapseHeader>
                        <Blazorise.CollapseBody>
                            <RainbowOF.Web.FrontEnd.Pages.ChildComponents.Items.ItemAttributesComponent PopUpRef="@PopUpRef"
                                                                                                    ParentItemId="@ItemEditting.ItemId"
                                                                                                    SourceItemAttributes="@ItemEditting.ItemAttributes" />
                        </Blazorise.CollapseBody>
                    </Blazorise.Collapse>
                </Blazorise.Accordion>
            </Column>
        </Row>
        @if (displayItemVariants)
        {
            <Row>
                <Column ColumnSize="ColumnSize.IsFull">
                    <Blazorise.Accordion>
                        <Blazorise.Collapse Visible="@collapseItemVariantsVisible" Margin="Margin.Is0">
                            <Blazorise.CollapseHeader>
                                <Blazorise.Heading Size="Blazorise.HeadingSize.Is1" Margin="Blazorise.Margin.Is1">
                                    <Blazorise.Button Clicked="@(()=>collapseItemVariantsVisible = !collapseItemVariantsVisible)">
                                        Item Variants &nbsp;&nbsp;
                                        <span style="margin-right: auto">
                                            <Icon IconStyle="IconStyle.Solid" Name="@(collapseItemVariantsVisible ? IconName.AngleDown : IconName.AngleUp)" Padding="Padding.Is2.FromLeft" Float="Float.End" />
                                        </span>
                                    </Blazorise.Button>
                                </Blazorise.Heading>
                            </Blazorise.CollapseHeader>
                            <Blazorise.CollapseBody>
                                <RainbowOF.Web.FrontEnd.Pages.ChildComponents.Items.ItemVariantsComponent PopUpRef="@PopUpRef"
                                                                                                  ParentItemId="@ItemEditting.ItemId" />
                            </Blazorise.CollapseBody>
                        </Blazorise.Collapse>
                    </Blazorise.Accordion>
                </Column>
            </Row>
        }
    </Validations>
    <br />
    <Row Height="Height.Is100.Min">
        <Column Margin="Margin.Is4.FromTop" ColumnSize="ColumnSize.IsFull.OnMobile.IsHalf.OnTablet">
            <Card Margin="Margin.Is4.FromTop">
                <CardHeader>
                    <CardTitle>Buttons toolbar</CardTitle>
                </CardHeader>
                <CardBody VerticalAlignment="VerticalAlignment.Middle">
                    <Tooltip Text="Pull from E-commerce platforms">
                        <Blazorise.Button Loading="IsItemImportBusy" Color="Color.Dark" Margin="Margin.Is1" Padding="Padding.Is1"
                                      @onclick="@ImportItem_Click" Type="ButtonType.Button"><Icon Name="IconName.ChevronRight" /> Refresh from Woo</Blazorise.Button>
                    </Tooltip>
                    <Tooltip Text="Save to with E-commerce platforms">
                        <Button Color="Color.Secondary"> <Icon Name="IconName.ChevronLeft" /> Save to Woo</Button>
                    </Tooltip>
                    <Tooltip Text="Save changes">
                        <Button Color="Color.Primary"><Icon Name="IconName.Save" /> Save</Button>
                    </Tooltip>
                    <Tooltip Text="Cancel changes">
                        <Button Color="Color.Danger"><Icon Name="IconName.Undo" /> Cancel Changes</Button>
                    </Tooltip>
                </CardBody>
            </Card>
        </Column>
        <Column Margin="Margin.Is4.FromTop" ColumnSize="ColumnSize.IsFull.OnMobile.IsHalf.OnTablet">
            <Card Margin="Margin.Is4.FromTop">
                <CardHeader>
                    <CardTitle>Settings</CardTitle>
                </CardHeader>
                <CardBody VerticalAlignment="VerticalAlignment.Middle">
                    <Tooltip Text="update categories/attributes and variants automatically">
                        <Check TValue="bool" TextAlignment="TextAlignment.End" Checked="DoAutoECommerceSync" CheckedChanged="@((v) => DoAutoECommerceSync = v)">Auto Sync to E-commerce</Check>
                    </Tooltip>
                </CardBody>
            </Card>
        </Column>
    </Row>
    <br />

}
<RainbowOF.Components.Modals.PopUpAndLogNotification @ref="PopUpRef" NotificationMessage="Item Message" NotificationTitle="" />

<RainbowOF.Components.Modals.ConfirmModal @ref="ImportConfirmationModal"
                                          ConfirmationClicked="ConfirmImport_ClickAsync"
                                          ConfirmationMessage=@($"Are you sure you want to delete ?")
                                          ConfirmButtonText="Delete"
                                          CancelButtonText="Cancel" />


@*<Card Margin="Margin.Is0" Class="overflow-auto">
    <CardBody>
    <table class="table table-striped table-hover table-borderless table-sm table-responsive">
    <tbody>
    <Repeater Items="@ItemEditting.ItemAttributes">
    <tr>
    <th style="width:auto">
    @context.ItemAttributeDetail.AttributeName
    </th>
    <td style="width:auto">
    @if (context.ItemAttributeDetail.ItemAttributeVarietyLookups != null)
    {
    <ul>
    @foreach (var att in context.ItemAttributeDetail.ItemAttributeVarietyLookups)
    {
    <li>@att.VarietyName</li>
    }
    </ul>
    }
    </td>
    <td style="width:auto">
    @if (context.IsUsedForItemVariety)
    {<Badge Color="Color.Info">Used for variations</Badge>}
    else
    {<span>&nbsp;</span>}
    </td>
    </tr>
    </Repeater>
    </tbody>
    </table>
    </CardBody>
    <CardFooter>
    <Row>
    <Column>
    <Button Color="Color.Secondary">Add Attributes</Button>
    </Column>
    <Column>
    <Button Color="Color.Warning">Remove Attributes</Button>
    </Column>
    </Row>
    </CardFooter>
    </Card>*@
