@page "/itemedit/{id}"

@using RainbowOF.Models.Items
@using RainbowOF.Models.Lookups
@using RainbowOF.Components.Modals
@using RainbowOF.Web.FrontEnd.Pages.ChildComponents.Items

<h2>@itemEditing?.ItemName Edit</h2>

<div>
    Need to do:
    <ul>
        <li>Show error if no variants exist (on save?).</li>
        <li>
            item variants issues:
            <ul>
                <li>Enable / disable a variant adds lookups or variants</li>
                <li>When saving not saving the item's type</li>
            </ul>
        </li>
        <li>Number formats, can they be fixed?</li>
        <li>Get lists to update -> once an item is changed use the lookup list to update item and sub-items or do a reload of the data - to do:
            <ul>
                <li>Item Type?</li>
            </ul>
        </li>
        <li>Saving of item, including the changes to variants</li>
        <li>Phase 2:
            <ul>
                <li>Add sorting to variants (drag and drop of a variant = sort</li>
                <li>Add Woo sync (Phase 2)</li>
            </ul>
        </li>
    </ul>
</div>
<hr />
@if (itemEditing == null)
{
    <Badge Class="alert-info" Pill="true">@loadingMessage</Badge>
}
else
{
      <Validations Mode="ValidationMode.Manual" EditContext="@itemEditContext">
        <Blazorise.Accordion>
            @*---- Item Detail Header ----*@
            <Blazorise.Collapse Visible="@collapseItemDetailsVisible" Margin="Margin.Is0">
                <Blazorise.CollapseHeader>
                    <Blazorise.Heading Size="Blazorise.HeadingSize.Is1" Margin="Blazorise.Margin.Is1">
                        <Blazorise.Button Clicked="@(()=>collapseItemDetailsVisible = !collapseItemDetailsVisible)">
                            Item Details &nbsp;&nbsp;
                            <Icon IconStyle="IconStyle.Solid" Name="@(collapseItemDetailsVisible ? IconName.AngleDown : IconName.AngleUp )" Padding="Padding.Is2.FromStart" Float="Float.End" />
                        </Blazorise.Button>
                    </Blazorise.Heading>
                </Blazorise.CollapseHeader>
                <Blazorise.CollapseBody>
                    <Tabs RenderMode="Blazorise.TabsRenderMode.LazyLoad" SelectedTab="@selectedItemTag" SelectedTabChanged="@((v) => selectedItemTag = v )">
                        <Items>
                            <Tab Name="MainDetail">Detail</Tab>
                            <Tab Name="MoreDetail">More</Tab>
                        </Items>
                        <Content>
                            <TabPanel Name="MainDetail">
                                @*----- Detail Tab ----*@
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">
                                            Item
                                        </FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <Tooltip Text="Name of the item (length less than 100)">
                                                <TextEdit Placeholder="Item name" @bind-Text="@itemEditing.ItemName">
                                                    <Feedback>
                                                        <ValidationError />
                                                    </Feedback>
                                                </TextEdit>
                                            </Tooltip>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">SKU</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <Tooltip Margin="Margin.Is0" Text="Stock code for the item (length less than 50)" Inline="true">
                                                <TextEdit Placeholder="Item Stock code (SKU) number" @bind-Text="@itemEditing.SKU">
                                                    <Feedback>
                                                        <ValidationError />
                                                    </Feedback>
                                                </TextEdit>
                                            </Tooltip>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Item Enabled</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <Tooltip Text="Is the item enabled or not">
                                                <Check @bind-Checked="@itemEditing.IsEnabled">
                                                    <ChildContent>
                                                        Enabled?
                                                    </ChildContent>
                                                    <Feedback>
                                                        <ValidationError />
                                                    </Feedback>
                                                </Check>
                                            </Tooltip>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop"><Tooltip Text="Detailed Description of item">Item Details</Tooltip></FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <RichTextEdit @ref="richTextEditRef" Style="border: 1px solid" Theme="RichTextEditTheme.Snow" PlaceHolder="Item Detail" ContentChanged="OnContentChanged">
                                                <Editor>
                                                    @((MarkupString)itemEditing.ItemDetail)
                                                </Editor>
                                                <Toolbar>
                                                    <RichTextEditToolbarGroup>
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Bold" />
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Italic" />
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Underline" />
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Strike" />
                                                    </RichTextEditToolbarGroup>
                                                    <RichTextEditToolbarGroup>
                                                        <RichTextEditToolbarSelect Action="RichTextEditAction.Size">
                                                            <RichTextEditToolbarSelectItem Value="small" />
                                                            <RichTextEditToolbarSelectItem Selected="true" />
                                                            <RichTextEditToolbarSelectItem Value="large" />
                                                            <RichTextEditToolbarSelectItem Value="huge">Very Big</RichTextEditToolbarSelectItem>
                                                        </RichTextEditToolbarSelect>
                                                    </RichTextEditToolbarGroup>
                                                    <RichTextEditToolbarGroup>
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="ordered" />
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="bullet" />
                                                    </RichTextEditToolbarGroup>
                                                    <RichTextEditToolbarGroup>
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Blockquote" />
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.CodeBlock" />
                                                    </RichTextEditToolbarGroup>
                                                    <RichTextEditToolbarGroup>
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Script" Value="sub" />
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Script" Value="super" />
                                                    </RichTextEditToolbarGroup>
                                                    <RichTextEditToolbarGroup>
                                                        <RichTextEditToolbarSelect Action="RichTextEditAction.Color" />
                                                        <RichTextEditToolbarSelect Action="RichTextEditAction.Background" />
                                                    </RichTextEditToolbarGroup>
                                                    <RichTextEditToolbarGroup>
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Link" />
                                                        <RichTextEditToolbarButton Action="RichTextEditAction.Clean" />
                                                    </RichTextEditToolbarGroup>
                                                    @*<RichTextEditToolbarGroup Float="Float.End">
                                                        <Button Class="btn-icon" Size="Size.ExtraSmall" onClick="window.open('https://www.quilljs.com/','quilljs')"><Icon Name="IconName.InfoCircle" /></Button>
                                                        <Button Class="btn-icon" Size="Size.ExtraSmall" Clicked="@OnSave"><Icon Name="IconName.Save" /></Button>
                                                        </RichTextEditToolbarGroup>*@
                                                </Toolbar>
                                            </RichTextEdit>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Item Abrv.</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <Tooltip Text="Item abbreviation is used in the order fulfilment table, so shorter is better (max length=10)">
                                                <TextEdit Placeholder="Item Abbreviation use for order fulfilment" @bind-Text="@itemEditing.ItemAbbreviatedName" MaxLength="10">
                                                    <Feedback>
                                                        <ValidationError />
                                                    </Feedback>
                                                </TextEdit>
                                            </Tooltip>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Item Type</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <Tooltip Text="What type of item is this?">
                                                <Select TValue="ItemTypes" SelectedValue="@itemEditing.ItemType"
                                                    SelectedValueChanged="@((v) => itemEditing.ItemType = SetChangedSelectedItemType(v))">
                                                    @foreach (var itemtypeoption in Enum.GetValues(typeof(ItemTypes)))
                                                    {
                                                        <SelectItem TValue="ItemTypes" Value="@((ItemTypes)itemtypeoption)">@itemtypeoption</SelectItem>
                                                    }
                                                </Select>
                                            </Tooltip>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Base Price</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <Tooltip Text="Item's Base Price (standard price)">
                                                <NumericEdit TValue="decimal" Placeholder="Item's Base Price (standard price)" @bind-Value="@itemEditing.BasePrice">
                                                    @*Pattern="{0:F}">*@
                                                    <Feedback>
                                                        <ValidationError />
                                                    </Feedback>
                                                </NumericEdit>
                                            </Tooltip>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Manage Stock</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <Tooltip Text="Is the stock managed by us/e-commerce system">
                                                <Check @bind-Checked="@itemEditing.ManageStock">
                                                    <ChildContent>
                                                        Manage Stock?
                                                    </ChildContent>
                                                    <Feedback>
                                                        <ValidationError />
                                                    </Feedback>
                                                </Check>
                                            </Tooltip>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Qty in Stock</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            <Tooltip Text="Quantity of this item that is in stock">
                                                <NumericEdit TValue="int" Placeholder="Quantity of item in stock" @bind-Value="@itemEditing.QtyInStock">
                                                    <Feedback>
                                                        <ValidationError />
                                                    </Feedback>
                                                </NumericEdit>
                                            </Tooltip>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                                <Validation>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Image</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                            @if ((itemEditing.ItemImages != null) && (itemEditing.ItemImages.Count > 0))
                                                {
                                                    ItemImage _thisImage = itemEditing.ItemImages[0];
                                                    <Image Source="@(_thisImage.ImageURL)" Text="@_thisImage.Alt" Style="width:100px" />
                                                }
                                                else
                                                {
                                                    <span>No image imported</span>
                                                }
                                            </FieldBody>
                                        </Field>
                                    </Validation>
                            </TabPanel>
                            <TabPanel Name="MoreDetail">
                                @*----  More Detail Tab ----*@
                                <Blazorise.Accordion>
                                    <Blazorise.Collapse Visible="@collapseItemMoreDetailsVisible">
                                        <Blazorise.CollapseHeader>
                                            <Blazorise.Heading Size="Blazorise.HeadingSize.Is1" Margin="Blazorise.Margin.Is1">
                                                <Blazorise.Button Clicked="@(()=>collapseItemMoreDetailsVisible = !collapseItemMoreDetailsVisible)">
                                                     More Details &nbsp;&nbsp;
                                                    <Icon IconStyle="IconStyle.Solid" Name="@(collapseItemMoreDetailsVisible ? IconName.AngleDown : IconName.AngleUp )" Padding="Padding.Is2.FromStart" Float="Float.End" />
                                                </Blazorise.Button>
                                            </Blazorise.Heading>
                                        </Blazorise.CollapseHeader>
                                        <Blazorise.CollapseBody>
                                            <Validation>
                                                <Field Horizontal="true">
                                                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Primary Category</FieldLabel>
                                                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                                        @{
                                                            List<ItemCategoryLookup> itemsCategories = GetListOfItemsCategoryLookups(itemEditing.ItemId);
                                                            <Tooltip Text="Primary Category, used for prediction">
                                                                <Select TValue="Guid" SelectedValue="@(itemEditing.PrimaryItemCategoryLookupId == null ? Guid.Empty : (Guid)itemEditing.PrimaryItemCategoryLookupId)"
                                                                        SelectedValueChanged="@((v) => itemEditing.PrimaryItemCategoryLookupId = SetChangedSelectedGuid(v))" >
                                                                    <SelectItem TValue="Guid" Value="Guid.Empty">n/a</SelectItem>
                                                                    @foreach (var itemCat in itemsCategories)
                                                                    {
                                                                        <SelectItem TValue="Guid" Value="@itemCat.ItemCategoryLookupId">@itemCat.FullCategoryName</SelectItem>
                                                                    }
                                                                </Select>
                                                            </Tooltip>
                                                        }
                                                    </FieldBody>
                                                </Field>
                                            </Validation>
                                            <Validation>
                                                <Field Horizontal="true">
                                                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Replacement Item</FieldLabel>
                                                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                                        @{
                                                            //-> was trying to search parent, looks a little complex. ItemCategory primaryCategory = ItemEditting.ItemCategories.FindFirstOrDefault(ic => ic.ItemCategoryLookupId == ItemEditting.PrimaryItemCategoryLookupId);
                                                            List<Item> possibleReplacmentItems = GetListOfSimilarItems(itemEditing.ItemId, itemEditing.PrimaryItemCategoryLookupId);
                                                            <Tooltip Text="Replacement Items with same Primary Category">
                                                                <Select TValue="Guid" SelectedValue="@(itemEditing.ReplacementItemId == null ? Guid.Empty : (Guid)itemEditing.ReplacementItemId)"
                                                                    SelectedValueChanged="@((v) => itemEditing.ReplacementItemId = SetChangedSelectedGuid(v))">
                                                                    <SelectItem TValue="Guid" Value="Guid.Empty">n/a</SelectItem>
                                                                    @if(possibleReplacmentItems != null)
                                                                        foreach (var item in possibleReplacmentItems)
                                                                        {
                                                                            <SelectItem TValue="Guid" Value="@item.ItemId">@item.ItemName</SelectItem>
                                                                        }
                                                                </Select>
                                                            </Tooltip>
                                                        }
                                                    </FieldBody>
                                                </Field>
                                            </Validation>
                                            <Validation>
                                                <Field Horizontal="true">
                                                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Sort Order</FieldLabel>
                                                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                                        <Tooltip Text="In what order must the item appear in a list">
                                                            <NumericEdit TValue="int" Placeholder="Item sort order" @bind-Value="@itemEditing.SortOrder">
                                                                <Feedback>
                                                                    <ValidationError />
                                                                </Feedback>
                                                            </NumericEdit>
                                                        </Tooltip>
                                                    </FieldBody>
                                                </Field>
                                            </Validation>
                                            <Validation>
                                                <Field Horizontal="true">
                                                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Sync with Woo</FieldLabel>
                                                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                                        <Tooltip Text="When updating must the e-commerce mapped product be updated">
                                                            <Check @bind-Checked="@itemEditing.CanUpdateECommerceMap">
                                                                <ChildContent>
                                                                    Sync with Woo?
                                                                </ChildContent>
                                                                <Feedback>
                                                                    <ValidationError />
                                                                </Feedback>
                                                            </Check>
                                                        </Tooltip>
                                                    </FieldBody>
                                                </Field>
                                            </Validation>
                                            <Validation>
                                                <Field Horizontal="true">
                                                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Notes</FieldLabel>
                                                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                                        <Tooltip Text="Any notes on this item">
                                                            <MemoEdit Placeholder="Item notes" @bind-Text="@itemEditing.Notes" Rows="3">
                                                                <Feedback>
                                                                    <ValidationError />
                                                                </Feedback>
                                                            </MemoEdit>
                                                        </Tooltip>
                                                    </FieldBody>
                                                </Field>
                                            </Validation>
                                        </Blazorise.CollapseBody>
                                    </Blazorise.Collapse>
                                    <Blazorise.Collapse Visible="@collapseCategoriesVisible">
                                        <Blazorise.CollapseHeader>
                                            <Blazorise.Heading Size="Blazorise.HeadingSize.Is1" Margin="Blazorise.Margin.Is1">
                                                <Blazorise.Button Clicked="@(()=>collapseCategoriesVisible = !collapseCategoriesVisible)">
                                                    Item Categories &nbsp;&nbsp;
                                                    <Icon IconStyle="IconStyle.Solid" Name="@(collapseCategoriesVisible ? IconName.AngleDown : IconName.AngleUp )" Padding="Padding.Is2.FromStart" Float="Float.End" />
                                                </Blazorise.Button>
                                            </Blazorise.Heading>
                                        </Blazorise.CollapseHeader>
                                        <Blazorise.CollapseBody>
                                            <Field Horizontal="true" JustifyContent="JustifyContent.Start">
                                                <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                                    @*----- Item Category Grid is a separate component ------*@
                                                     <ItemCategoriesComponent PopUpRef="@PopUpRef"
                                                                              ParentItemId="currentItemId" />
                                                </FieldBody>
                                            </Field>
                                        </Blazorise.CollapseBody>
                                    </Blazorise.Collapse>
                                </Blazorise.Accordion>
                            </TabPanel>
                        </Content>
                    </Tabs>
                </Blazorise.CollapseBody>
            </Blazorise.Collapse>
        </Blazorise.Accordion>
        <Row>
            @*---- Item Attributes ----*@
            <Column ColumnSize="ColumnSize.IsFull">
                <Blazorise.Accordion>
                    <Blazorise.Collapse Visible="@collapseAttributesVisible" Margin="Margin.Is0">
                        <Blazorise.CollapseHeader>
                            <Blazorise.Heading Size="Blazorise.HeadingSize.Is1" Margin="Blazorise.Margin.Is1">
                                <Blazorise.Button Clicked="@(()=>collapseAttributesVisible = !collapseAttributesVisible)">
                                    Item Attributes &nbsp;&nbsp;
                                    <span style="margin-right: auto">
                                        <Icon IconStyle="IconStyle.Solid" Name="@(collapseAttributesVisible ? IconName.AngleDown : IconName.AngleUp)" Padding="Padding.Is2.FromStart" Float="Float.End" />
                                    </span>
                                </Blazorise.Button>
                            </Blazorise.Heading>
                        </Blazorise.CollapseHeader>
                        <Blazorise.CollapseBody>
                            @*----- Item Attribute Grid is a separate component ------*@
                            @{
                                var myId = currentItemId;
                            <ItemAttributesComponent PopUpRef="@PopUpRef"
                                                     ParentItemId="myId"
                                                     OnAttributeChangeToVariableEvent="ItemAttributeChangedToVariableAsync" /> 
                            }
                        </Blazorise.CollapseBody>
                    </Blazorise.Collapse>
                </Blazorise.Accordion>
            </Column>
        </Row>
        @if (displayItemVariants)        @*---- If there are Variants then this is displayed ----*@
        {
            <Row>
                <Column ColumnSize="ColumnSize.IsFull">
                    <Blazorise.Accordion>
                        <Blazorise.Collapse Visible="@collapseItemVariantsVisible" Margin="Margin.Is0">
                            <Blazorise.CollapseHeader>
                                <Blazorise.Heading Size="Blazorise.HeadingSize.Is1" Margin="Blazorise.Margin.Is1">
                                    <Blazorise.Button Clicked="@(()=>collapseItemVariantsVisible = !collapseItemVariantsVisible)">
                                        Item Variants &nbsp;&nbsp;
                                        <span style="margin-right: auto">
                                            <Icon IconStyle="IconStyle.Solid" Name="@(collapseItemVariantsVisible ? IconName.AngleDown : IconName.AngleUp)" Padding="Padding.Is2.FromStart" Float="Float.End" />
                                        </span>
                                    </Blazorise.Button>
                                </Blazorise.Heading>
                            </Blazorise.CollapseHeader>
                            <Blazorise.CollapseBody>
                                @*----- Item Category Grid is a separate component ------*@
                                @{
                                    var myId = currentItemId;

                                    <ItemVariantsComponent @ref="itemVariantsComponent"
                                                        PopUpRef="@PopUpRef"
                                                        ParentItemId="myId" />
                                  }
                            </Blazorise.CollapseBody>
                        </Blazorise.Collapse>
                    </Blazorise.Accordion>
                </Column>
            </Row>
        }
    </Validations>
    <br />
    <Row Height="Height.Is100.Min">
        @*---- Footer Button bar ----*@
        <Column Margin="Margin.Is4.FromTop" ColumnSize="ColumnSize.IsFull.OnMobile.IsHalf.OnTablet">
            <Card Margin="Margin.Is4.FromTop">
                @*---- Buttons ----*@
                <CardHeader>
                    <CardTitle>Buttons toolbar</CardTitle>
                </CardHeader>
                <CardBody VerticalAlignment="VerticalAlignment.Middle">
                    <Tooltip Text="Save changes">
                        <Button Color="Color.Primary" Margin="Margin.Is1" Padding="Padding.Is1"
                                    @onclick="@SaveItem_ClickAsync" Type="ButtonType.Button"><Icon Name="IconName.Save" /> Save</Button>
                    </Tooltip>
                    <Tooltip Text="Cancel changes">
                        <Button Color="Color.Danger" Margin="Margin.Is1" Padding="Padding.Is1"
                                    @onclick="@CancelItem_ClickAsync" Type="ButtonType.Button"><Icon Name="IconName.Undo" /> Cancel Changes</Button>
                    </Tooltip>
                    &nbsp;&nbsp;&nbsp;&nbsp;
                    <Tooltip Text="Pull from E-commerce platforms">
                        <Blazorise.Button Loading="isItemImportBusy" Color="Color.Dark" Margin="Margin.Is1" Padding="Padding.Is1"
                                          @onclick="@ImportItem_ClickAsync" Type="ButtonType.Button"><Icon Name="IconName.ChevronRight" /> Refresh from Woo</Blazorise.Button>
                    </Tooltip>
                    <Tooltip Text="Save to with E-commerce platforms">
                        <Button Disabled="true" Color="Color.Secondary" Margin="Margin.Is1" Padding="Padding.Is1"><Icon Name="IconName.ChevronLeft" /> Save to Woo</Button>
                    </Tooltip>
                </CardBody>
            </Card>
        </Column>
        <Column Margin="Margin.Is4.FromTop" ColumnSize="ColumnSize.IsFull.OnMobile.IsHalf.OnTablet">
            @*---- options ----*@
            <Card Margin="Margin.Is4.FromTop">
                <CardHeader>
                    <CardTitle>Settings</CardTitle>
                </CardHeader>
                <CardBody VerticalAlignment="VerticalAlignment.Middle">
                    <Tooltip Text="update categories/attributes and variants automatically">
                        <Check Disabled="true" TValue="bool" TextAlignment="TextAlignment.End" Checked="doAutoECommerceSync" CheckedChanged="@((v) => doAutoECommerceSync = v)">Auto Sync to E-commerce</Check>
                    </Tooltip>
                </CardBody>
            </Card>
        </Column>
    </Row>
    <br />

    <RainbowOF.Components.Modals.ConfirmModal @ref="importConfirmationModal"
                                              ConfirmationClicked="ConfirmImport_ClickAsync"
                                              ConfirmationMessage=@($"Are you sure you want to import?")
                                              ConfirmButtonText="Import"
                                              CancelButtonText="Cancel" />

    <RainbowOF.Components.Modals.ConfirmModal @ref="cancelConfirmationModal"
                                              ConfirmationClicked="ConfirmCancel_ClickAsync"
                                              ConfirmationMessage=@($"Are you sure you want to cancel changes?")
                                              ConfirmButtonText="Yes"
                                              CancelButtonText="No" />
}
<RainbowOF.Components.Modals.PopUpAndLogNotification @ref="PopUpRef" NotificationMessage="Item Message" NotificationTitle="" />


